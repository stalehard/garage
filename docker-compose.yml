version: '3'
services:
  api:
    build: 
      context: .
      dockerfile: Dockerfile-api
    depends_on:
      - db
    ports:
      - ${API_PORT}:${API_PORT}
    volumes:
      - ./api/src:/app/src
      - ./config:/app/src/config
      - ./models:/app/src/models
    command: ["yarn", "start"]
    environment:
      SERVER_NAME: ${SERVER_NAME}
      API_PORT: ${API_PORT}
      NODE_ENV: ${APP_ENV}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      DB_DATABASE: ${POSTGRES_DB}

  db:
    restart: on-failure
    image: postgres:10-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - ${DB_PORT}:5432
    volumes:
      - ./data/postgres-${APP_ENV}:/var/lib/postgresql/data

  pgweb:
    restart: on-failure
    image: sosedoff/pgweb
    depends_on:
      - db
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${DB_HOST}:${DB_PORT}/${POSTGRES_DB}?sslmode=disable
    ports:
      - 8081:8081
    logging:
      driver: none

  mailhog:
    restart: on-failure
    image: mailhog/mailhog
    ports:
      - 1025:1025
      - 8025:8025
    logging:
      driver: none
    